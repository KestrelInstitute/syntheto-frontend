# This is a basic workflow to help you get started with Actions

name: extensionrelease


on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK8 
      uses: joschi/setup-jdk@v2
      with:
        java-version: '8'
    - name: Build with Gradle
      working-directory: syntheto-xtext
      run: chmod +x ./gradlew && ./gradlew vscodeextension
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body_path: /home/runner/work/syntheto-xtext/syntheto-xtext/syntheto-xtext/syntheto.vscode/README.md
        draft: false
        prerelease: true 
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: /home/runner/work/syntheto-xtext/syntheto-xtext/syntheto-xtext/syntheto.vscode/build/vscode/syntheto.vscode-0.0.52.vsix
        asset_name: syntheto.vscode-0.0.52.vsix
        asset_content_type: application/zip
