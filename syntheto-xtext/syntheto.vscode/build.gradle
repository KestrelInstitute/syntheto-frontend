task copyApplication(type: Sync) {
    def installDistTask = project(':edu.vanderbilt.isis.midas.syntheto.ide').tasks.installDist
    dependsOn installDistTask
    from installDistTask.outputs
    into 'src/syntheto'
}

clean {
    doLast {
        delete copyApplication.outputs
    }
}

npmInstall.dependsOn copyApplication

task installExtension(type: Exec, dependsOn: vscodeExtension) {
    if (System.properties['os.name'].toLowerCase().contains('windows')) {
        commandLine 'code.cmd'
    } else {
        commandLine 'code-insiders'
    }
    args '--install-extension', vscodeExtension.destPath
}

task startCode(type:Exec, dependsOn: installExtension) {
    if (System.properties['os.name'].toLowerCase().contains('windows')) {
        commandLine 'code.cmd'
    } else {
        commandLine 'code-insiders'
    }
    args "$rootProject.projectDir/demo/", '--new-window', '--enable-proposed-api=vanderbilt.midas-syntheto'
}

// task publish(dependsOn: vscodeExtension, type: NodeTask) {
//     script = file("$rootProject.projectDir/node_modules/vsce/out/vsce")
//     args = [ 'publish', '-p', System.getenv('ACCESS_TOKEN'), "--packagePath", "${project.buildDir}/vscode/syntheto.vscode-${project.version}.vsix"]
//     execOverrides {
//         workingDir = projectDir
//     }
//}